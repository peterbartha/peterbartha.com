---
import { author, twitterHandle } from '@data/author';

interface PageOpenGraph {
  title: string;
  description: string;
  canonicalUrl?: string;
  /** Image requirements:
   * - Type: JPG, PNG or GIF format (Twitter also supports WebP)
   * - Max file size: <5 MB (Facebook supports up to 8MB)
   * - Dimensions:
   *   - Facebook (OG): min 200x20px, ideally 1200x630px (preferred aspect ratio 1.91:1)
   *   - Twitter: min 144x144px, max 4096x4096px (preferred aspect ratio 1:1)
   */
  image?: {
    url: string;
    alt: string;
    mimeType: string;
    width: number;
    height: number;
  };
  twitterCardType?: 'summary' | 'summary_large_image';
}

interface PostOpenGraph extends PageOpenGraph {
  publishedTime: string;
  modifiedTime?: string;
  category?: string;
  tags: string[];
}

type Props = PageOpenGraph | PostOpenGraph;
export type Metadata = Props;

const {
  title,
  description,
  canonicalUrl = new URL(Astro.url.pathname, Astro.site).href,
  image,
  twitterCardType = 'summary_large_image',
  publishedTime,
  modifiedTime,
  category,
  tags,
} = Astro.props;
const titleWithTrailingName = title !== author ? `${title} | ${author}` : title;
---

<title>{titleWithTrailingName}</title>
<meta name="title" content={titleWithTrailingName} />
<meta name="description" content={description} />
<meta name="author" content={author} />
<link rel="canonical" href={canonicalUrl} />

<meta name="robots" content="index, follow" />
<meta
  name="googlebot"
  content="index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"
/>

<!--#region Open Graph  -->
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:type" content="website" />
<meta property="og:url" content={canonicalUrl} />
<meta property="og:site_name" content={author} />
<meta property="og:locale" content="en-US" />
{
  image && (
    <>
      <meta property="og:image:url" content={image.url} />
      <meta property="og:image:alt" content={image.alt} />
      <meta property="og:image:type" content={image.mimeType} />
      <meta property="og:image:width" content={image.width} />
      <meta property="og:image:height" content={image.height} />
    </>
  )
}
<!--#endregion -->

<!--#region Twitter Card  -->
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:card" content={twitterCardType} />
<meta name="twitter:url" content={canonicalUrl} />
<meta name="twitter:site" content={twitterHandle} />
<meta name="twitter:creator" content={twitterHandle} />
{
  image && (
    <>
      <meta name="twitter:image" content={image.url} />
      <meta name="twitter:image:alt" content={image.alt} />
    </>
  )
}
<!--#endregion -->

<!--#region Additional blog post metatags  -->
{
  publishedTime && (
    <>
      <meta property="article:published_time" content={publishedTime.toISOString()} />
      <meta property="article:author" content={author} />
    </>
  )
}
{modifiedTime && <meta property="article:published_time" content={modifiedTime.toISOString()} />}
{category && <meta property="article:section" content={category} />}
{tags && tags.map((tag: string) => <meta property="article:tag" content={tag} />)}
<!--#endregion -->
